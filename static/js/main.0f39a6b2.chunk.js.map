{"version":3,"sources":["components/Header/HeaderButton.js","components/Header/Header.js","components/Popup/PopupClose.js","components/Popup/PopupInput.js","components/Popup/PopupSignIn.js","components/Popup/PopupLoggedIn.js","components/Popup/PopupError.js","components/Popup/Popup.js","api/Api.js","components/Content/ContentButton.js","components/Content/Content.js","App.js","reducers/popup.js","reducers/users.js","reducers/popupValidation.js","reducers/index.js","reducers/isLoggedIn.js","reducers/filterUsers.js","index.js"],"names":["HeaderButton","props","onClick","callback","className","name","Header","this","onQuiteClick","onOpenClick","src","alt","isLoggedIn","_quite","bind","_openPopup","React","Component","connect","state","dispatch","type","PopupClose","onCloseClick","_closePopup","PopupInput","_name","_placeholder","placeholder","_validation","_input","value","length","_error","textContent","onUsernameUnvalid","onPasswordUnvalid","onUsernameValid","onPasswordValid","ref","input","onChange","id","span","PopupSignIn","_signInCallback","signInCallback","event","preventDefault","username","document","querySelector","password","then","res","non_field_errors","_buttonError","token","localStorage","setItem","onEntering","onLoggingIn","isFormValid","_signIn","disabled","popupValidation","isUsernameValid","isPasswordValid","PopupLoggedIn","toClosePopup","PopupError","onAuthButton","Popup","isSignInPopupOpen","isLoggedInPopupOpen","isPopupOpen","popupSignIn","popupLoggedIn","Api","_link","baseUrl","fetch","method","headers","body","JSON","stringify","ok","json","Promise","reject","catch","err","console","log","status","authorization","getItem","ContentButton","_getUsersCallback","getUsers","innerHTML","data","sort","a","b","forEach","user","onShowClick","onErrorClick","_getUsers","_showError","payload","first_name","last_name","Content","onFindUser","_userInput","usersAreShown","_findUser","users","map","usersList","filter","includes","filterUsers","App","toLogIn","api","_getApi","_checkLogging","signIn","popupError","initialState","combineReducers","action","removeItem","store","createStore","reducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0f39a6b2.chunk.js","sourcesContent":["import React from 'react';\n\n// Отрисовка кнопки в header'e\nexport default function HeaderButton(props) {\n    return (\n        <button onClick={props.callback} className=\"header__button\">{props.name}</button>\n    );\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport HeaderButton from './HeaderButton';\n\nclass Header extends React.Component {\n\n    // Выход из аккаунта\n    _quite() {\n        this.props.onQuiteClick();\n    }\n\n    // Открытие попапа для авторизации\n    _openPopup() {\n        this.props.onOpenClick();\n    }\n\n    // Отрисовка header'а\n    render() {\n       return(\n        <header className=\"header\">\n            <img src=\"images/logo.png\" className=\"header__logo\" alt=\"logo\" />\n            { this.props.isLoggedIn ? <HeaderButton callback={this._quite.bind(this)} name='Выйти' />\n                : <HeaderButton callback={this._openPopup.bind(this)} name='Авторизироваться'/> }\n        </header> \n       )\n    }\n}\n\nexport default connect(\n    state => ({\n        isLoggedIn: state.isLoggedIn\n    }),\n    dispatch => ({\n        onOpenClick: () => {\n            dispatch({ type: 'OPEN_SIGNIN_POPUP' });\n        },\n        onQuiteClick: () => {\n            dispatch({ type: 'CLEAR_USERLIST' });\n            dispatch({ type: 'QUITE' });\n        }\n    })\n)(Header);","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass PopupClose extends React.Component {\n    _closePopup() {\n        this.props.onCloseClick();\n    }\n\n    render() {\n        return (\n            <img \n                src=\"images/close.svg\" \n                alt=\"X\" \n                className=\"popup__close\"\n                onClick={this._closePopup.bind(this)} \n            />\n        )\n    }\n}\n\nexport default connect(\n    state => ({}),\n    dispatch => ({\n        onCloseClick: () => {\n            dispatch({ type: 'CLOSE_POPUP' })\n        }\n    })\n)(PopupClose);","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass PopupInput extends React.Component {\n    constructor(props){\n        super(props);\n        this._name = props.name;\n        this._placeholder = props.placeholder;\n        this._validation = this._validation.bind(this);\n    }\n\n    // Валидация введенных данных\n    _validation() {\n        if(this._input.value.length === 0) {\n            this._error.textContent = 'Это обязательное поле';\n            this._name === 'name' ? this.props.onUsernameUnvalid() : this.props.onPasswordUnvalid();\n        } else {\n            this._error.textContent = '';\n            this._name === 'name' ? this.props.onUsernameValid() : this.props.onPasswordValid();\n        }\n    }\n\n    // Отрисовка полей ввода\n    render() {\n        this.props.onUsernameUnvalid();\n        this.props.onPasswordUnvalid();\n        return (\n            <div>\n                <input \n                    type={this._name === 'name' ? 'text' : 'password'} \n                    name={this._name} \n                    className=\"popup__input\" \n                    placeholder={this._placeholder} \n                    ref={(input) => {this._input = input}} \n                    onChange={this._validation} \n                />\n                <span \n                    id={this._name} \n                    className=\"popup__error\" \n                    ref={(span) => {this._error = span}}>\n                </span>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({}),\n    dispatch => ({\n        onUsernameValid: () => {\n            dispatch({ type: 'USERNAME_VALID' })\n        },\n        onUsernameUnvalid: () => {\n            dispatch({ type: 'USERNAME_UNVALID' })\n        },\n        onPasswordValid: () => {\n            dispatch({ type: 'PASSWORD_VALID' })\n        },\n        onPasswordUnvalid: () => {\n            dispatch({ type: 'PASSWORD_UNVALID' })\n        }\n    })\n)(PopupInput);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PopupClose from './PopupClose';\nimport PopupInput from './PopupInput';\n\nclass PopupSignIn extends React.Component {\n    constructor(props) {\n        super(props);\n        this._signInCallback = props.signInCallback;\n    }\n\n    // Авторизация пользователя\n    _signIn(event) {\n        event.preventDefault();\n        const username = document.querySelector('input[name=name]').value;\n        const password = document.querySelector('input[name=password]').value;\n        this._signInCallback(username, password)\n            .then((res) => {\n                if(res.non_field_errors) {\n                    this._buttonError.textContent = 'Неправильный пароль или имя пользователя'\n                } else if(res.token) {\n                    localStorage.setItem('token', res.token)\n                    this.props.onEntering();\n                    this.props.onLoggingIn();\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"popup__content\">\n                <PopupClose />\n                <h3 className=\"popup__title\">Авторизироваться</h3>\n                <form className=\"popup__form\" name=\"new\">\n                    <PopupInput name=\"name\" placeholder=\"Имя пользователя\" />\n                    <PopupInput name=\"password\" placeholder=\"Пароль\" />\n                    <span id=\"enter\" className=\"popup__button-error\" ref={(span) => {this._buttonError = span}}></span>\n                    <button name=\"enter\" className={this.props.isFormValid ? \"popup__button\" : \"popup__button-disable\"} onClick={this._signIn.bind(this)} disabled={!this.props.isFormValid}>Войти</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({\n        isFormValid: (state.popupValidation.isUsernameValid && state.popupValidation.isPasswordValid)\n    }),\n    dispatch => ({\n        onLoggingIn: () => {\n            dispatch({ type: 'OPEN_LOGGEDIN_POPUP' })\n        },\n        onEntering: () => {\n            dispatch({ type: 'ENTERED' })\n        }\n    })\n)(PopupSignIn);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PopupClose from './PopupClose';\n\nclass PopupLoggedIn extends React.Component {\n    // Закрыть попап\n    _closePopup() {\n        this.props.toClosePopup();\n    }\n\n    // Попап при успешной авторизации\n    render() {\n        return (\n            <div className=\"popup__content\">\n                <PopupClose />\n                <h3 className=\"popup__title popup__title_succes\">Пользователь успешно авторизирован!</h3>\n                <button type=\"button\" className=\"popup__button\"  onClick={this._closePopup.bind(this)}>Ок</button>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({}),\n    dispatch => ({\n        toClosePopup: () => {\n            dispatch({ type: 'CLOSE_POPUP' })\n        }\n    })\n)(PopupLoggedIn);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PopupClose from './PopupClose';\n\nclass PopupError extends React.Component {\n    // Открыть попап для авторизации\n    _signIn() {\n        this.props.onAuthButton();\n    }\n\n    // Попап ошибки с просьбой авторизироваться\n    render() {\n        return (\n            <div className=\"popup__content\">\n                <PopupClose />\n                <h3 className=\"popup__title\">Авторизируйтесь, чтобы посмотреть список пользователей</h3>\n                <button type=\"button\" className=\"popup__button\"  onClick={this._signIn.bind(this)}>Авторизироваться</button>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({}),\n    dispatch => ({\n        onAuthButton: () => {\n            dispatch({ type: 'OPEN_SIGNIN_POPUP' })\n        }\n    })\n)(PopupError);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PopupSignIn from './PopupSignIn';\nimport PopupLoggedIn from './PopupLoggedIn';\nimport PopupError from './PopupError';\n\nclass Popup extends React.Component {\n    constructor(props){\n        super(props);\n        this.signInCallback = props.signInCallback;\n    }\n\n    // Отрисовка попапа в зависимости от того, какой открыл пользователь\n    render() {\n        return (\n            <div className=\"popup\">\n                {this.props.isSignInPopupOpen ? \n                <PopupSignIn signInCallback={ this.signInCallback }/> : \n                (this.props.isLoggedInPopupOpen ? <PopupLoggedIn /> : \n                <PopupError />)\n                }\n            </div>\n        )\n    }\n}\n\nexport default connect (\n    state => ({\n        isSignInPopupOpen: state.isPopupOpen.popupSignIn,\n        isLoggedInPopupOpen: state.isPopupOpen.popupLoggedIn\n    }),\n    dispatch => ({})\n)(Popup);","export default class Api {\n    constructor(props) {\n        this._link = props.baseUrl\n    }\n\n    signIn(username, password) {\n        return fetch(`${this._link}/api-token-auth/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: username,\n                password: password\n            })\n        })\n        .then((res) => {\n            if(res.ok) {\n                return res.json();\n            }\n            return Promise.reject(res);\n        })\n        .catch((err) => {\n            console.log('Ошибка: ' + err.status);\n            return err.json();\n        })\n    }\n\n    getUsers() {\n        return fetch(`${this._link}/api/v1/users/`, {\n            method: 'GET',\n            headers: {\n                authorization: `Token ${localStorage.getItem('token')}`\n            }\n        })\n        .then((res => {\n            if(res.ok) {\n                return res.json();\n            }\n            return Promise.reject(res);\n        }))\n        .catch((err) => {\n            console.log('Ошибка: ' + err.status);\n            return err.json();\n        })\n    }\n}","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass ContentButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this._getUsersCallback = props.getUsers;\n    }\n\n    // Получение пользователей с сервера\n    _getUsers() {\n        document.querySelector('.users__list').innerHTML = '';\n        this._getUsersCallback()\n            // Сортировка пользователей по id\n            .then((data) => {\n                data.sort((a, b) => a.id > b.id ? 1 : -1);\n                return data;\n            })\n            // Добавление объекта пользователя в массив usersList в store\n            .then((data) => {\n                data.forEach((user) => {\n                    this.props.onShowClick(user);\n                })\n            })\n    }\n\n    // Ошибка при неавторизированной попытке получить список пользователей\n    _showError() {\n        this.props.onErrorClick();\n    }\n\n    // Действия кнопки в зависимости от авторизированности пользователя \n    render() {\n        return (\n            <button \n                type=\"button\" \n                className=\"users__button\" \n                onClick={ this.props.isLoggedIn ? \n                    this._getUsers.bind(this) : \n                    this._showError.bind(this)}\n            >\n                Список пользователей\n            </button>\n        )\n    }\n}\n\nexport default connect(\n    state => ({\n        isLoggedIn: state.isLoggedIn\n    }),\n    dispatch => ({\n        onShowClick: (props) => {\n            const payload = {\n                id: props.id,\n                name: `${props.first_name} ${props.last_name}`,\n                username: props.username\n            }\n            dispatch({ type: 'ADD_USER', payload })\n        },\n        onErrorClick: () => {\n            dispatch({ type: 'OPEN_ERROR_POPUP' })\n        }\n    })\n)(ContentButton);","import React from 'react';\nimport { connect } from 'react-redux';\nimport ContentButton from './ContentButton';\n\nclass Content extends React.Component {\n    constructor(props){\n        super(props);\n        this.getUsers = props.getUsers;\n    }\n\n    // Фильтрация списка пользователей по введеному слову\n    _findUser() {\n        this.props.onFindUser(this._userInput.value);\n    }\n\n    // Отрисовка кнопки и списка пользователей с полем для поиска\n    // Список и поле поиска отрисовываются только при нажатии кнопки\n    render() {\n        return (\n            <div className=\"users\">\n                <ContentButton getUsers={() => this.getUsers()} />\n                { this.props.usersAreShown ? \n                    <div className=\"users__search-field\">\n                        <input className=\"users__search\" placeholder=\"Поиск пользователя\" ref={(input) => { this._userInput = input }}></input>\n                        <button className=\"users__search-button\" onClick={this._findUser.bind(this)}>Искать</button>\n                    </div>\n                    : null }\n                <ul className=\"users__list\">\n                    {this.props.users.map((user) => \n                        <li key={user.id} className=\"users__item\">id: {user.id}<br />Username: {user.username}<br />Name: {user.name}</li>\n                    )}\n                </ul>\n            </div>\n        )\n    }\n} \n\nexport default connect(\n    state => ({\n        users: state.users.usersList.filter(user => user.username.includes(state.filterUsers)),\n        usersAreShown: state.users.usersAreShown\n    }),\n    dispatch => ({\n        onFindUser: (name) => {\n            dispatch({ type: 'FIND_USER', payload: name })\n        }\n    })\n)(Content);","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from './components/Header/Header';\nimport Popup from './components/Popup/Popup';\nimport Api from './api/Api';\nimport Content from './components/Content/Content';\n\nclass App extends React.Component {\n\n  // Создание экземпляра класса Api для взаимодействия с сервером\n  _getApi() {\n    return new Api({\n      baseUrl: 'https://emphasoft-test-assignment.herokuapp.com'\n    });\n  }\n\n  // Проверка на наличие токена в локальном хранилище браузера при загрузке страницы\n  _checkLogging() {\n    if (localStorage.getItem('token') != null) {\n      this.props.toLogIn();\n    }\n  }\n\n  // Рендеринг страницы\n  render() {\n    const api = this._getApi();\n    this._checkLogging();\n    return (\n      <div className=\"app\">\n        <Header />\n        <Content getUsers={() => api.getUsers()} />\n        { this.props.isPopupOpen ? \n          <Popup \n            signInCallback={(user, password) => api.signIn(user, password)}\n          /> : null }\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    isPopupOpen: (state.isPopupOpen.popupSignIn || \n      state.isPopupOpen.popupLoggedIn || \n      state.isPopupOpen.popupError)\n  }),\n  dispatch => ({\n    toLogIn: () => {\n      dispatch({ type: 'ENTERED' })\n    }\n  })\n)(App);\n","const initialState = {\n    popupSignIn: false,\n    popupLoggedIn: false,\n    popupError: false\n};\n\nexport default function popup(state = initialState, action) {\n    // Открытие попапа для авторизации\n    if (action.type === 'OPEN_SIGNIN_POPUP') {\n        return {\n            popupSignIn: true,\n            popupLoggedIn: false,\n            popupError: false\n        };\n    // Открытие попапа успешной авторизации\n    } else if (action.type === 'OPEN_LOGGEDIN_POPUP') {\n        return {\n            popupSignIn: false,\n            popupLoggedIn: true,\n            popupError: false\n        }\n    // Открытие попапа с ошибкой\n    } else if (action.type === 'OPEN_ERROR_POPUP') {\n        return {\n            popupSignIn: false,\n            popupLoggedIn: false,\n            popupError: true\n        }\n    // Закрытие попапа\n    } else if (action.type === 'CLOSE_POPUP') {\n        return {\n            popupSignIn: false,\n            popupLoggedIn: false,\n            popupError: false\n        }\n    }\n    return state;\n}","const initialState = {\n    usersList: [],\n    usersAreShown: false\n};\n\nexport default function users(state = initialState, action) {\n    // Добавление полученного с сервера пользователя в массив\n    if (action.type === 'ADD_USER'){\n        return {\n            usersList: [\n            ...state.usersList,\n            action.payload\n            ],\n            usersAreShown: true\n        }\n    // Очистка массива при выходе из аккаунта\n    } else if (action.type === 'CLEAR_USERLIST') {\n        return {\n            usersList: [],\n            usersAreShown: false\n        }\n    }\n    return state;\n}","const initialState = {\n    isUsernameValid: false,\n    isPasswordValid: false\n}\n\nexport default function popupValidation(state = initialState, action) {\n    if (action.type === 'USERNAME_VALID'){\n        return { ...state, isUsernameValid: true };\n    } else if (action.type === 'USERNAME_UNVALID'){\n        return { ...state, isUsernameValid: false };\n    } else if (action.type === 'PASSWORD_VALID'){\n        return { ...state, isPasswordValid: true };\n    } else if (action.type === 'PASSWORD_UNVALID'){\n        return { ...state, isPasswordValid: false };\n    }\n    return state;\n}   ","import { combineReducers } from 'redux';\n\nimport isPopupOpen from './popup';\nimport isLoggedIn from './isLoggedIn';\nimport users from './users';\nimport filterUsers from './filterUsers';\nimport popupValidation from './popupValidation';\n\nexport default combineReducers({\n    isPopupOpen,\n    isLoggedIn,\n    users,\n    filterUsers,\n    popupValidation\n});","const initialState = false;\n\nexport default function loggingin(state = initialState, action) {\n    // Пользователь вошел в систему\n    if (action.type === 'ENTERED') {\n        return true;\n    // Пользователь вышел из системы\n    } else if (action.type === 'QUITE') {\n        localStorage.removeItem('token');\n        return false;\n    }\n    return state;\n}","const initialState = '';\n\nexport default function filterUsers(state = initialState, action) {\n    if (action.type === 'FIND_USER') {\n        return action.payload;\n    }\n    return state;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}